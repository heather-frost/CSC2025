Microsoft (R) Macro Assembler Version 14.35.32215.0	    09/30/24 11:00:53
start.asm						     Page 1 - 1


				; Main Console program
				; Wayne Cook
				; 20 September 2024
				; Show how to do input and output
				; Revised: WWC 14 March 2024 Added new module
				; Revised: WWC 15 March 2024 Added this comment ot force a new commit.
				; Revised: WWC 13 September 2024 Minore updates for Fall 2024 semester.
				; Register names:
				; Register names are NOT case sensitive eax and EAX are the same register
				; x86 uses 8 registers. EAX (Extended AX register has 32 bits while AX is
				;	the right most 16 bits of EAX). AL is the right-most 8 bits.
				; Writing into AX or AL effects the right most bits of EAX.
				;     EAX - caller saved register - usually used for communication between
				;			caller and callee.
				;     EBX - Callee saved register
				;     ECX - Caller saved register - Counter register 
				;     EDX - Caller Saved register - data, I use it for saving and restoring
				;			the return address
				;     ESI - Callee Saved register - Source Index
				;     EDI - Callee Saved register - Destination Index
				;     ESP - Callee Saved register - stack pointer
				;     EBP - Callee Saved register - base pointer.386P

				.model flat

				extern writeline: near
				extern readline: near
				extern charCount: near
				extern writeNumber: near

 00000000			.data

 00000000 48 65 6C 6C 6F	msg             byte  "Hello, World", 10, 0   ; ends with line feed (10) and NULL
	   2C 20 57 6F 72
	   6C 64 0A 00
 0000000E 50 6C 65 61 73	prompt          byte  "Please type your name: ", 0 ; ends with string terminator (NULL or 0)
	   65 20 74 79 70
	   65 20 79 6F 75
	   72 20 6E 61 6D
	   65 3A 20 00
 00000026 0A 59 6F 75 20	results         byte  10,"You typed: ", 0
	   74 79 70 65 64
	   3A 20 00
 00000033 0A 54 68 65 20	numberPrint     byte  10,"The number is: ",0
	   6E 75 6D 62 65
	   72 20 69 73 3A
	   20 00
 00000044 00000400		numCharsToRead  dword 1024
 00000048 00000000		bufferAddr      dword ?

 00000000			.code

				; Library calls used for input from and output to the console; This is the entry procedure that does all of the testing.
 00000000			start PROC near
 00000000			_start:
				    ; Type a prompt for the user
				    ; WriteConsole(handle, &Prompt[0], 17, &written, 0)
 00000000  68 0000000E R	    push  offset prompt
 00000005  E8 00000000 E	    call  charCount
 0000000A  50			    push  eax
 0000000B  68 0000000E R	    push  offset prompt
 00000010  E8 00000000 E	    call  writeline

				    ; Read what the user entered.
 00000015  E8 00000000 E	    call  readline

				    ; The following embeds the above code in a common routine, so the more complicated call only needs to be written once.
				    ; writeline(&results[0], 12)
 0000001A  A3 00000048 R	    mov   bufferAddr, eax
 0000001F  68 00000026 R	    push  offset results
 00000024  E8 00000000 E	    call  charCount
 00000029  50			    push  eax
 0000002A  68 00000026 R	    push  offset results
 0000002F  E8 00000000 E	    call  writeline
 00000034  FF 35 00000044 R	    push  numCharsToRead
 0000003A  FF 35 00000048 R	    push  bufferAddr
 00000040  E8 00000000 E	    call  writeline

				    ; Try print a number
 00000045  68 00000033 R	    push  offset numberPrint
 0000004A  E8 00000000 E	    call  charCount
 0000004F  50			    push  eax
 00000050  68 00000033 R	    push  offset numberPrint
 00000055  E8 00000000 E	    call  writeline
 0000005A  68 2E1F5E76		    push  773807734
 0000005F  E8 00000000 E	    call  writeNumber

 00000064			exit:
 00000064  C3			    ret                                     ; Return to the main program.

 00000065			start ENDP
				END
Microsoft (R) Macro Assembler Version 14.35.32215.0	    09/30/24 11:00:53
start.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 0000004C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000065 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

start  . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000065 Public
  _start . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  exit . . . . . . . . . . . . .	L Near	 00000064 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
bufferAddr . . . . . . . . . . .	DWord	 00000048 _DATA	
charCount  . . . . . . . . . . .	L Near	 00000000 FLAT	External
msg  . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
numCharsToRead . . . . . . . . .	DWord	 00000044 _DATA	
numberPrint  . . . . . . . . . .	Byte	 00000033 _DATA	
prompt . . . . . . . . . . . . .	Byte	 0000000E _DATA	
readline . . . . . . . . . . . .	L Near	 00000000 FLAT	External
results  . . . . . . . . . . . .	Byte	 00000026 _DATA	
writeNumber  . . . . . . . . . .	L Near	 00000000 FLAT	External
writeline  . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
